@model PagedList.IPagedList<TLAS.Models.WeighBridge>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@{
    ViewBag.Title = "WeighBridge -Manual Entry";
}
<hr />
<div class="container">
    <div class="col-md-6">
        <h2>WeighBridge -Manual Entry</h2>
        <div class="table-responsive">
            @using (Html.BeginForm("Index", "WeighBridge", FormMethod.Get))
            { <p>@Html.TextBox("SearchString", ViewBag.CurrentFilter as string) <input type="submit" value="Search" /></p> }
            <table class="table table-condensed table-bordered table-hover table-striped">
                <thead>
                    <tr class="btn-default">
                        <th><b>@Html.ActionLink("ShipmentID", "Index", new { sortOrder = ViewBag.IdSortParm })</b></th>
                        <th><b>@Html.ActionLink("Vehicle Code", "Index", new { sortOrder = ViewBag.VehicleSortParm })</b></th>
                        <th><b>@Html.ActionLink("Status", "Index")</b></th>
                        <th><b>@Html.ActionLink("Modified Date", "Index")</b></th>
                        <th><b>@Html.ActionLink("is Manual", "Index")</b></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr value="@item.ShipmentID" onclick="edit('@item.ShipmentID','@item.TareWeight','@item.LoadedWeight','@item.ActualWeight','@item.Shipment.AccessCardID','@item.Shipment.CarrierName','@item.Shipment.DriverName','@item.Shipment.VehicleCode','@item.Shipment.Order.OrderCode','@item.Ismanual','@item.Status');">
                            <td>
                                @Html.DisplayFor(modelItem => item.ShipmentID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.VehicleCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ModifiedDate)
                            </td>
                            <td>
                                @Html.CheckBoxFor(modelItem => item.Ismanual)
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>


    @using (Html.BeginForm("Create", "WBManual", FormMethod.Post, new { role = "form" }))
    {
        <div class="col-md-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           
            <div class="form-group ">
                <div class="btn-group col-md-offset-4">
                    <button type="button" class="btn btn-primary" onclick="clearNew();">New</button>
                    <button type="submit" class="btn btn-primary" name="save" value="save" id="save">Save</button>
                    <button type="button" class="btn btn-primary" id="delete" onclick="deleteRecord();" disabled>Delete</button>
                </div>
            </div>

            <div class="form-horizontal">
                <div class="form-group">
                    @Html.HiddenFor(m => Model.FirstOrDefault().ModifiedDate, new { @Value = System.DateTime.Now })
                    @Html.HiddenFor(m => Model.FirstOrDefault().ShipmentID, new { @id = "ShipId" })
                    <label for="Oname" class="col-md-4 control-label">Order Code</label>
                    <div class="col-md-4">
                        @Html.DropDownList("Ordercodelist", ViewData["Ordercodelist"] as SelectList, new { @class = "form-control", @id = "Oname" })

                    </div>
                </div>

                <div class="form-group">
                    <label for="Vcode" class="col-md-4 control-label">Vechicle Code</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().VehicleCode, new { htmlAttributes = new { @class = "form-control", @id = "Vcode", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="form-group">
                    <label for="Cname" class="col-md-4 control-label">Carrier Name</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().VehicleCode, new { htmlAttributes = new { @class = "form-control", @id = "Cname", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Dname" class="col-md-4 control-label">Driver Name</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().VehicleCode, new { htmlAttributes = new { @class = "form-control", @id = "Dname", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group">
                    <label for="Key" class="col-md-4 control-label">Key</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().VehicleCode, new { htmlAttributes = new { @class = "form-control", @id = "Key", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Tweight" class="col-md-4 control-label">Tare Weight</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().TareWeight, new { htmlAttributes = new { @class = "form-control", @id = "Tweight" } })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Lweight" class="col-md-4 control-label">Loaded Weight</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().LoadedWeight, new { htmlAttributes = new { @class = "form-control", @id = "Lweight" } })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Aweight" class="col-md-4 control-label">Actual Weight</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().ActualWeight, new { htmlAttributes = new { @class = "form-control", @id = "Aweight", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    <label for="Status" class="col-md-4 control-label">Status</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().Status, new { htmlAttributes = new { @class = "form-control", @id = "Status", @readonly = "readonly" } })
                    </div>
                </div>

                <div class="form-group">
                    <label for="ismanual" class="col-md-4 control-label">Manual Entry</label>
                    <div class="col-md-4">
                        @Html.CheckBoxFor(m => Model.FirstOrDefault().Ismanual, new { @id = "Ismanual", htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

            </div>
        </div>
    }


</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">

    function edit(ShipmentID, TareWeight, LoadedWeight, ActualWeight, AccessCardID, CarrierName, DriverName, VehicleCode, OrderCode, ismanual, Status) {
      
        $("#ShipId").val(ShipmentID)
        $("#Vcode").val(VehicleCode)
        $("#Dname").val(DriverName)
        $("#Cname").val(CarrierName)
        $("#Tweight").val(TareWeight)
        $("#Lweight").val(LoadedWeight)
        $("#Aweight").val(ActualWeight)
        $("#Key").val(AccessCardID)
        $("#Oname").val(OrderCode)
        $("#Status").val(Status)

        if (ismanual == "onclick") {
            $("#Ismanual").prop('checked', true);
        }
        else {
            $("#Ismanual").prop('checked', false);
        }

    }


    $(document).ready(function () {

       

        $('#Oname').change(function () {
            $.ajax({
                type: "post",
                url: '@Url.Action("GETShipdataByOrderID", "WBManual")',
                data: { ordercode: $('#Oname').val() },
                datatype: "json",
                traditional: true
            }).done(function myfunction(data) {
             
                $("#Cname").val("");
                $("#Dname").val("");
                $("#Vcode").val("");
                $("#Key").val("");
                $("#Tweight").val("");
                $("#Lweight").val("");
                $("#Aweight").val("");

                $("#Cname").val(data[0].Text);
                $("#Dname").val(data[1].Value);
                $("#Vcode").val(data[2].Text);
                $("#Key").val(data[3].Value);
                $("#ShipId").val(data[4].Value);



                $.ajax({
                    type: "post",
                    url: '@Url.Action("GetWBEntryByShipID", "WBManual")',
                    data: { Shipid: $('#ShipId').val() },
                    datatype: "json",
                    traditional: true
                }).done(function myfunction(data) {
                    for (var i = 0; i < data.length; i++) {

                        var name = data[i].Text;
                        if (name == "_TW")
                        {
                            $("#Tweight").val(data[i].Value);
                        }
                        if (name == "_LW") {
                            $("#Lweight").val(data[i].Value);
                        }

                        if (name == "_AW") {
                            $("#Aweight").val(data[i].Value);
                        }

                        if (name == "_S") {
                            $("#Status").val(data[i].Value)
                        }

                    }
                })

            })
        })


        $('#Lweight').change(function () {

            $("#Aweight").val($("#Lweight").val() - $("#Tweight").val());

        })


        $('#Tweight').change(function () {

            $("#Aweight").val($("#Lweight").val() - $("#Tweight").val());

        })

    });

    function clearNew() {
        $("#Oname").val("");
        $("#Tweight").val("");
        $("#Lweight").val("");
        $("#Aweight").val("");
        $("#Key").val("");
        $("#Cname").val("");
        $("#Dname").val("");
        $("#Vcode").val("");
        $("#Shipid").val("");
         $("#save").prop("disabled", false);
         $("#Ismanual").prop('disabled', true);
         $("#Ismanual").prop('checked', true);

    }

</script>




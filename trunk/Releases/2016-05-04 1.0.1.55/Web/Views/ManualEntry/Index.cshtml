@model PagedList.IPagedList<TLAS.Models.Shipment>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
@{
    ViewBag.Title = "Manual Entry";
}
<hr />
<div class="container">
    <div class="col-md-4">
        <h2>Manual Entry</h2>
        <div class="table-responsive">
            @using (Html.BeginForm("Index", "ManualEntry", FormMethod.Get))
            { <p>@Html.TextBox("SearchString", ViewBag.CurrentFilter as string) <input type="submit" value="Search" /></p> }
            <table class="table table-condensed table-bordered table-hover table-striped">
                <thead>
                    <tr class="btn-default">
                        <th><b>@Html.ActionLink("Vehicle Code", "Index", new { sortOrder = ViewBag.IdSortParm })</b></th>
                        <th><b>@Html.ActionLink("Order Code", "Index", new { sortOrder = ViewBag.NameSortParm })</b></th>
                        <th><b>@Html.ActionLink("Status", "Index")</b></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr onclick="edit('@item.ID','@item.IsManual','@item.AccessCardID','@item.ModifiedDate','@item.DeletedFlag','@item.CreatedDate','@item.ShipmentStatusID','@item.OrderID','@item.BayID','@item.BayName','@item.CustomerName','@item.VehicleCode','@item.DriverName','@item.DriverCNIC','@item.CarrierName','@item.ShipmentDate','@item.ProductID','@item.VehicleCode','@item.Order.OrderQty','@item.Order.OrderCode');">
                            <td>
                                @Html.DisplayFor(modelItem => item.VehicleCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Order.OrderCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ShipmentStatu.Status)
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>

        @using (Html.BeginForm("Create", "ManualEntry", FormMethod.Post, new { @id = "formAll", role = "form" }))
        {


            <div class="container">
                <h2>Compartment</h2>

                <table class="table table-condensed table-bordered table-hover table-striped">
                    <thead>
                        <tr class="btn-primary">
                            <th><b>Compartment Code</b></th>
                            <th><b>Order Code</b></th>
                            <th><b>Product</b></th>
                            <th><b>Capacity</b></th>
                            <th><b>Ordered Qty</b></th>
                            <th><b>Actual Qty</b></th>
                        </tr>
                    </thead>
                    <tbody id="compTable">

                        @*<tr>
                                <td><span></span></td>
                                <td><span></span></td>
                                <td><span></span></td>
                            </tr>*@


                    </tbody>
                </table>
            </div>


            
       @: </div>






            @*@using (Html.BeginForm("Create", "Shipments", FormMethod.Post))
                {*@
            <div class="col-md-8">
                @Html.ValidationSummary(true, "", new { @class = "text-danger", @id = "errorSummary" })
                @Html.Label(" ", new { @id = "errorMessages", @class = "text-danger" })
                <div class="form-group ">
                    <div class="btn-group col-md-offset-4">
                        <button type="submit" class="btn btn-primary" id="save" disabled>Save</button>
                        <button type="submit" class="btn btn-primary" id="close" onclick="closePressed();" disabled>Close</button>
                    </div>
                </div>
                <div class="form-horizontal">
                    @Html.HiddenFor(m => Model.FirstOrDefault().ModifiedDate, new { @Value = System.DateTime.Now })
                    @Html.HiddenFor(m => Model.FirstOrDefault().CreatedDate, new { @Value = System.DateTime.Now })
                    @Html.HiddenFor(m => Model.FirstOrDefault().ID, new { @id = "shipmentId" })
                    @Html.HiddenFor(m => Model.FirstOrDefault().ShipmentStatusID, new { @id = "shipmentStatusId" })
                    @Html.HiddenFor(m => Model.FirstOrDefault().ProductID, new { @id = "productId" })
                    @Html.HiddenFor(m => Model.FirstOrDefault().Order.OrderQty, new { @id = "odrQty" })
                    @Html.HiddenFor(m => Model.FirstOrDefault().OrderID, new { @id = "odrId" })
                    <div class="form-group">
                        <label for="custName" class="col-md-4 control-label">Customer Name</label>
                        <div class="col-md-4">
                            @Html.EditorFor(m => Model.FirstOrDefault().CustomerName, new { htmlAttributes = new { @class = "form-control", @id = "custName", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="carrName" class="col-md-4 control-label">Carrier Name</label>
                        <div class="col-md-4">
                            @Html.EditorFor(m => Model.FirstOrDefault().CarrierName, new { htmlAttributes = new { @class = "form-control", @id = "carrName", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="custName" class="col-md-4 control-label">Vehicle Code</label>
                        <div class="col-md-4">
                            @Html.EditorFor(m => Model.FirstOrDefault().VehicleCode, new { htmlAttributes = new { @class = "form-control", @id = "vehCode", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="custName" class="col-md-4 control-label">Driver Name</label>
                        <div class="col-md-4">
                            @Html.EditorFor(m => Model.FirstOrDefault().DriverName, new { htmlAttributes = new { @class = "form-control", @id = "drvName", @readonly = "readonly" } })
                        </div>
                    </div>
                </div>


            </div>


        }
    </div>

    @section Scripts {
        @*@Scripts.Render("~/bundles/jquery")*@
        @Scripts.Render("~/bundles/jqueryval")
        @Scripts.Render("~/bundles/jqueryui")
        @Styles.Render("~/Content/cssjqryUi")
    }

    <script type="text/javascript">

    function edit(id, isManual, accessCard, modifiedDate, DeletedFlag, createdDate, shipStatusId, orderId, bayId, bayName, customerName, vehicleCode, driverName, driverCnic, carrierName, shipmentDate, productId, vehicleId, odrQty, odrCode) {

        $("#shipmentId").val(id)
        $("#shipmentStatusId").val(shipStatusId)
        $("#productId").val(productId)
        $("#odrQty").val(odrQty)
        $("#odrId").val(orderId)
        $("#custName").val(customerName)
        $("#vehCode").val(vehicleCode)
        $("#drvName").val(driverName)
        $("#carrName").val(carrierName)
        //$("#dateShipment").val(shipmentDate)

        //if (isManual == "onclick") {
        //    $("#manualEntry").prop('checked', true);
        //}
        //else {
        //    $("#manualEntry").prop('checked', false);
        //}

        var prd;
        if (productId == 1) {
            prd = "LPG"
        }
        else {
            prd = "Condensate"
        }

        $.ajax({
            type: "post",
            url: '@Url.Action("compartmentPlanning", "ManualEntry")',
            data: {
                vehicleId: vehicleId,
                id: id
            },
            datatype: "json",
            traditional: true
        }).done(function myfunction(data) {
            $('#compTable').empty();
            if (data[0].isCreatedLI == true) {
                for (var i = 0; i < data.length; i++) {
                    $('#compTable').append('<tr><input type="hidden" name="compId' + i + '" id="compId' + i + '" value= "' + data[i].CompIdLI + '" /><td><input type="text" name="compCode' + i + '" id="compCode' + i + '" value= "' + data[i].CompCodeLI + '" readonly /></td><td><input type="text" name="compOdrCode' + i + '" id="compOdrCode' + i + '" value= "' + odrCode + '" readonly /></td><td><input type="text" name="compPrd' + i + '" id="compPrd' + i + '" value= "' + prd + '" readonly /></td><td><input type="text" name="compCapacity' + i + '" id="compCapacity' + i + '" value= "' + data[i].CapacityLI + '" readonly /></td><td><input type="text" name="compOdrQty' + i + '" id="compOdrQty' + i + '" value= "' + data[i].OrderedQtyLI + '" readonly /></td><td><input type="text" name="compPlannedQty' + i + '" id="compPlannedQty' + i + '" value= "' + data[i].PlannedQtyLI + '" /></td></tr>');
                }
            }
            else {
                for (var i = 0; i < data.length; i++) {
                    $('#compTable').append('<tr><td><input type="text" name="compCode' + i + '" id="compCode' + i + '" value= "' + data[i].Text + '" readonly /></td><td><input type="text" name="compOdrCode' + i + '" id="compOdrCode' + i + '" value= "' + odrCode + '" readonly /></td><td><input type="text" name="compPrd' + i + '" id="compPrd' + i + '" value= "' + prd + '" readonly /></td><td><input type="text" name="compCapacity' + i + '" id="compCapacity' + i + '" value= "' + data[i].Value + '" readonly /></td><td><input type="text" name="compOdrQty' + i + '" id="compOdrQty' + i + '" value= "' + odrQty + '" readonly /></td><td><input type="text" name="compPlannedQty' + i + '" id="compPlannedQty' + i + '" /></td></tr>');
                }
            }
        })

        /////////////////////////////////finally unlock and lock buttons////////////////////////////////////////////
        switch (shipStatusId) {
            case "4":
                $("#save").prop("disabled", false);
                $("#close").prop("disabled", false);
                break;
            case "5":
                $("#save").prop("disabled", true);
                $("#close").prop("disabled", true);
                break;

        }
    }
    function closePressed() {
        $("#shipmentStatusId").val(5);

    }
    </script>







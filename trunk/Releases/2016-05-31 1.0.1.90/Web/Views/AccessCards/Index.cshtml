@model PagedList.IPagedList<TLAS.ViewModel.AccessCardViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@{
    ViewBag.Title = "AccessCard";
}
<hr />
<div class="container">
    <div class="col-md-4">
        <h2>AccessCard</h2>
        <div class="table-responsive">
            @using (Html.BeginForm("Index", "AccessCards", FormMethod.Get))
            { <p>@Html.TextBox("SearchString", ViewBag.CurrentFilter as string) <input type="submit" value="Search" /></p> }
            <table class="table table-condensed table-bordered table-hover table-striped">
                <thead>
                    <tr class="btn-default">
                        <th><b>@Html.ActionLink("ID", "Index", new { sortOrder = ViewBag.IdSortParm })</b></th>
                        <th><b>@Html.ActionLink("BayID", "Index")</b></th>
                        <th><b>@Html.ActionLink("Active", "Index")</b></th>
                        <th><b>@Html.ActionLink("IsAssigned", "Index")</b></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr value="@item.CardID" onclick="edit('@item.CardID','@item.BayID','@item.Active','@item.Remarks','@item.IsAssigned');">
                            <td>
                                @Html.DisplayFor(modelItem => item.CardID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.BayID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Active)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsAssigned)
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
            <br />
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>

    @using (Html.BeginForm("Create", "AccessCards", FormMethod.Post, new { role = "form", @id = "formAccessCard" }))
    {
        <div class="col-md-8">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.Label(" ", new { @id = "errorMessagesOnSave", Style = "color: red" })
            <div class="form-group ">
                <div class="btn-group col-md-offset-4">
                    <button type="button" class="btn btn-primary" disabled>New</button>
                    <button type="submit" class="btn btn-primary" name="save" value="save" id="save">Save</button>
                </div>
            </div>
            <div class="form-horizontal">
                @Html.HiddenFor(m => Model.FirstOrDefault().IsAssigned, new { @id = "isAssigned" })
                <div class="form-group">
                    <label for="address" class="col-md-4 control-label">Card ID</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().CardID, new { htmlAttributes = new { @class = "form-control", @id = "cardID", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(m => Model.FirstOrDefault().CardID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="compSelect" class="col-md-4 control-label">Bay No</label>
                    <div class="col-md-4">
                        @Html.EditorFor(m => Model.FirstOrDefault().BayID, new { htmlAttributes = new { @class = "form-control", @id = "bayName", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(m => Model.FirstOrDefault().BayID, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label for="" class="col-md-4 control-label">Active</label>
                    <div class="col-md-4">
                        @Html.CheckBoxFor(m => Model.FirstOrDefault().Active, new { @id = "active", htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="form-group">
                    <label for="address" class="col-md-4 control-label">Remarks</label>
                    <div class="col-md-4">
                        @Html.TextAreaFor(m => Model.FirstOrDefault().Remarks, new { @class = "form-control", @id = "remarks", cols = 35, @rows = 4 })
                        @Html.ValidationMessageFor(m => Model.FirstOrDefault().Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script type="text/javascript">
    $(document).ready(function () {


        $("#formAccessCard").submit(function (e) {
            e.preventDefault(); //prevent the default action
            debugger;
            var isAssigned = $("#isAssigned").val();
            var isActive = $("#active").is(':checked').toString();
            if ((isActive == "false") && (isAssigned == "true")) {
                $("#errorMessagesOnSave").text("Card is already assigned");
            }
            else
            {
                $("#errorMessagesOnSave").text(" ");
                $("#formAccessCard").unbind('submit').submit();
            }
        });
    });

    function edit(cardID, bayID, active, remarks, isAssigned) {
        $("#errorMessagesOnSave").text(" ");
        $("#cardID").val(cardID)
        $("#bayName").val(bayID)
        $("#remarks").val(remarks)
        if (active == "onclick") {
            $("#active").prop('checked', true);
        }
        else {
            $("#active").prop('checked', false);
        }
        if (isAssigned == "onclick") {
            $("#isAssigned").val(true);
        }
        else {
            $("#isAssigned").val(false);
        }
    }
    function clearNew() {
        //$("#save").prop("disabled", false);
        //$("#cardID").val(0)
        //$("#bayID").val("")
        //$("#remarks").val("")
    }
    function deleteRecord() {
        @*var localId = $("#carrId").val();
        var localName = $("#name").val();
        var r = confirm("Do you want to delete: "+localName);
        if (r == true) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("Delete", "Carriers")',
                data: { id: localId },
                success: function refresh() {
                    window.location.reload(true);
                }
            });
        }*@
    }
</script>





